(setq COPY-CANDIDATES (--map (format "%s: %s" (cadr it) (car it)) '(
  ("¯\\_(ツ)_/¯" "shrugman")
  ("🤔" "thinking")
	("😅" "sweat smile")
  ("😊" "blush")
  ("👻" "ghost")
  ("🙃" "upside down")
  ("😏" "smirk")
  ("😠" "angry")
  ("😡" "rage")
  ("👌" "ok")
  ("😆" "laugh satisfied")
  ("😱" "scream")
  ("🤗" "hugging")
	("💃" "dance")
  ("👍" "good")
  ("😘" "kiss")
  ("🙈" "see no evil")
  ("👋" "hello")
  ("😈" "imp")
  ("😉" "wink")
  ("🤣" "lol")
  ("😳" "flushed")
  ("😬" "grimacing")
  ("✊" "fist")
  ("🙁" "sad")
  ("😕" "confused")
  ("😄" "smile")
	("😎" "sun glasses")
	("🤪" "crazy")
  ("🤟" "rock")
  ("🔥" "fire")
	("🤧" "ill")
	("ä" "aa")
	("ö" "oo")
	("ü" "uu")
	("ß" "ss")
  ("«»" "quotes")
)))

(defun ej/quick-copy ()
  (interactive)
  (helm :sources (helm-build-sync-source "test"
                   :candidates COPY-CANDIDATES
                   :fuzzy-match t
                   :action #'(lambda (x) (kill-new (cadr (s-split-up-to ": " x 1)))))
        :buffer "*helm quick copy*"))
(defun ej/quick-copy-external ()
  (interactive)
  (let ((buffer (generate-new-buffer "Completions")))
    (switch-to-buffer-other-frame buffer)
    (ej/quick-copy)
    (delete-frame)
    (kill-buffer buffer)))
